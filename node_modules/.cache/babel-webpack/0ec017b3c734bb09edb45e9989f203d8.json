{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Storage } from '@capacitor/storage';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ionic/angular\";\n\nconst setValue = (key, value) => __awaiter(void 0, void 0, void 0, function* () {\n  yield Storage.set({\n    key: key,\n    value: value\n  });\n}); // const getValue = async (key) => {\n//   const { value } = await Storage.get({ key: key });\n//   return value;\n// };\n\n\nconst removeValue = key => __awaiter(void 0, void 0, void 0, function* () {\n  yield Storage.remove({\n    key: key\n  });\n});\n\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(router) {\n      this.router = router; //     if (!isLogin) {\n      //       router.navigate(['/login']);\n      //     }\n\n      this.init();\n    }\n\n    getValue(key) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return yield Storage.get({\n          key: key\n        });\n      });\n    }\n\n    init() {\n      this.isLogin = this.getValue('name') ? true : false;\n\n      if (!this.isLogin) {\n        this.router.navigate(['/login']);\n      } //     else {\n      //       alert('로그인 상태예요.');\n      //     }\n\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 2,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\");\n        i0.ɵɵelement(1, \"ion-router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    directives: [i2.IonApp, i2.IonRouterOutlet],\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}